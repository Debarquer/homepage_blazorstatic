@page "/kattis"
@using Components/CodeToStringFormatter

<PageTitle>Kattis</PageTitle>

<h1>Kattis assignments</h1>

<div style="display: flex; flex-flow: column wrap; text-align:center;">
    <h2>Classic FizzBuzz</h2>
    <div style="display: flex; flex-flow: row wrap; height:900px;">
        <div style="width:50%;background-color:slategrey; color:white; text-align:left;">
            <BlazorApp.Client.Components.CodeToStringFormatter Url="fizzbuzz1code.cs" />
        </div>
        <div style="width:50%;background-color:gray; color:white;">@fizzbuzz1result</div>
    </div>

    <h2>Meta FizzBuzz</h2>
    <div style="display: flex; flex-flow: row wrap; height:500px;">
        <div style="width:50%;background-color:slategrey; color:white; text-align:left;">
            <BlazorApp.Client.Components.CodeToStringFormatter Url="fizzbuzz2code.cs" />
        </div>
        <div style="width:50%;background-color:gray; color:white;">@fizzbuzz2result</div>
    </div>
</div>

@code {
    private string result = "";
    private string input = "Please enter calculation.";

    string operators = "+-*/()";

    string fizzbuzz1result = "";
    string fizzbuzz2result = "";

    // private void CalculateResult(string s)
    // {
    //     // result = ResolveParanthesis(s.ToCharArray());
    //     result = "2";
    // }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        InitFizzBuzz1();
        InitFizzBuzz2();
    }


    private void init()
    {
        InitFizzBuzz1();
    }

    void InitFizzBuzz1()
    {
        fizzbuzz1result = "";

        string[] s = "3 5 15".Split(" ");

        int X = int.Parse(s[0]);
        int Y = int.Parse(s[1]);
        int N = int.Parse(s[2]);

        for (int i = 1; i <= N; i++)
        {
            if (i % X == 0 && i % Y == 0)
            {
                fizzbuzz1result += "FizzBuzz ";
            }
            else if (i % X == 0)
            {
                fizzbuzz1result += "Fizz ";
            }
            else if (i % Y == 0)
            {
                fizzbuzz1result += "Buzz ";
            }
            else
            {
                fizzbuzz1result += i + " ";
            }
        }
    }

    void InitFizzBuzz2()
    {
        string[] nm = "3 15".Split(" ");

        int n = int.Parse(nm[0]);
        int m = int.Parse(nm[1]);

        int bestNrOfAnswers = -1;
        int bestCandidateId = -1;

        string[] lines = {
    "1 2 fizz 4 5 fizz 7 8 fizz 10 11 fizz 13 14 fizz",
    "1 2 3 4 buzz 6 7 8 9 buzz 11 12 13 14 buzz",
    "1 2 fizz 4 buzz fizz 7 8 fizz buzz 11 fizz 13 14 fizzbuzz" };

        for (int i = 0; i < n; i++)
        {
            int nrOfCorrectAnswers = 0;

            //string[] split = Console.ReadLine().Split(" ");
            string[] split = lines[i].Split(" ");
            for (int j = 0; j < m; j++) //m == split.Length
            {
                string s = split[j];
                if (CheckAnswer(j + 1, 3, 5, s)) nrOfCorrectAnswers++;
            }

            if (nrOfCorrectAnswers > bestNrOfAnswers)
            {
                bestNrOfAnswers = nrOfCorrectAnswers;
                bestCandidateId = i + 1;
            }
        }

        fizzbuzz2result = "The best candidate was " + bestCandidateId + " with " + bestNrOfAnswers + " correct answers";
    }

    bool CheckAnswer(int n, int x, int y, string value)
    {
        return GetAnswer(n, x, y) == value;
    }

    string GetAnswer(int n, int x, int y)
    {
        if (n % x == 0 && n % y == 0)
        {
            return "fizzbuzz";
        }
        else if (n % x == 0)
        {
            return "fizz";
        }
        else if (n % y == 0)
        {
            return "buzz";
        }
        else
        {
            return n.ToString();
        }
    }
}